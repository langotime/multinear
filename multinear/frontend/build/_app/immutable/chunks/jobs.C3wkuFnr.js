import{d as _,a as j}from"./disclose-version.BjBLbfIf.js";import"./legacy.b-VaXUeO.js";import{f as k}from"./index-client.BoCi2Vgn.js";import{s as g}from"./index.CW1sqyse.js";import{l as y,s as S}from"./props.Cy3ILhV4.js";import{I as w,b as h,s as $,c as R}from"./index.CbYL5kad.js";import{w as m,g as x}from"./index.CZPF9jM2.js";import{g as b}from"./entry.Cr83aM1g.js";function O(s,t){const r=y(t,["children","$$slots","$$events","$$legacy"]);w(s,S({name:"play"},()=>r,{iconNode:[["polygon",{points:"6 3 20 12 6 21 6 3"}]],children:(o,c)=>{var n=_(),l=k(n);g(l,t,"default",{},null),j(o,n)},$$slots:{default:!0}}))}const i=m(null),u=m({currentJob:null,jobStatus:null,jobDetails:null,taskStatusCounts:{}});async function J(s,t,r){var o,c,n,l;let a="started";for(;!["completed","failed","not_found"].includes(a);){await new Promise(e=>setTimeout(e,1e3));try{const e=await h(s,t);a=e.status;let p={};if(e.task_status_map&&Object.keys(e.task_status_map).length>0&&(p=Object.values(e.task_status_map).reduce((d,f)=>(d[f]=(d[f]||0)+1,d),{})),(((o=e.details)==null?void 0:o.status)==="failed"||(c=e.details)!=null&&c.error)&&(a="failed",e.error=e.details.error),u.set({currentJob:t,jobStatus:a,jobDetails:e,taskStatusCounts:p}),a==="completed"&&!((n=e.details)!=null&&n.error))await r();else if(a==="failed"||(l=e.details)!=null&&l.error)break}catch(e){console.error("Error polling job status:",e),u.set({currentJob:t,jobStatus:"failed",jobDetails:{project_id:s,job_id:t,status:"failed",total_tasks:1,current_task:1,task_status_map:{},error:e instanceof Error?e.message:"Unknown error occurred"},taskStatusCounts:{}});break}}}async function U(s,t){i.set({type:"experiment",projectId:s}),b("/")}async function z(s,t,r){i.set({type:"task",projectId:s,challengeId:t}),b("/")}async function q(s){const t=x(i);if(t)try{const a=(t.type==="experiment"?await $(t.projectId):await R(t.projectId,t.challengeId)).job_id;u.update(o=>({...o,currentJob:a,jobStatus:"started",jobDetails:null,taskStatusCounts:{}})),await J(t.projectId,a,s)}catch(r){console.error("Error executing pending run:",r),u.set({currentJob:null,jobStatus:"failed",jobDetails:{project_id:t.projectId,job_id:"",status:"failed",total_tasks:1,current_task:1,task_status_map:{},error:r instanceof Error?r.message:"Unknown error occurred"},taskStatusCounts:{}})}finally{i.set(null)}}export{O as P,i as a,z as b,q as e,U as h,u as j,J as p};
